{"version":3,"sources":["../src/KeyboardedInput.js"],"names":["KeyboardedInput","props","handleFocus","bind","handleFocusLost","handleChange","hideKeyboard","state","showKeyboard","input","refs","addEventListener","removeEventListener","event","onChange","target","value","setState","that","setTimeout","document","activeElement","classList","contains","type","min","max","step","pattern","autoFocus","enabled","defaultKeyboard","secondaryKeyboard","capitalize","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACXA,KADW;;AAEjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,OAApB;;AAEA,UAAKI,KAAL,GAAa;AACXC,oBAAc,KADH;AAEXC,aAAO;AAFI,KAAb;AAPiB;AAWlB;;;;wCAEmB;AAClB,WAAKC,IAAL,CAAUD,KAAV,CAAgBE,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKN,YAA/C;AACD;;;2CAEsB;AACrB,WAAKK,IAAL,CAAUD,KAAV,CAAgBG,mBAAhB,CAAoC,OAApC,EAA6C,KAAKP,YAAlD;AACD;;;iCAEYQ,K,EAAO;AAClB,WAAKZ,KAAL,CAAWa,QAAX,CAAoBD,MAAME,MAAN,CAAaC,KAAjC;AACD;;;kCAEa;AACZ,WAAKC,QAAL,cAAkB,KAAKV,KAAvB,IAA8BC,cAAc,IAA5C;AACD;;;oCAEeK,K,EAAO;AACrB,UAAIK,OAAO,IAAX;AACAC,iBAAW,YAAU;AAClB,YAAI,CAACC,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,iBAA1C,CAAD,IAAiE,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,UAA1C,CAAlE,IAA2H,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,cAA1C,CAAhI,EAA2L;AACzLL,eAAKD,QAAL,cAAkBC,KAAKX,KAAvB,IAA8BC,cAAc,KAA5C;AACD;AACH,OAJD,EAIG,CAJH;AAKD;;;mCAEc;AACb,WAAKS,QAAL,cAAkB,KAAKV,KAAvB,IAA8BC,cAAc,KAA5C;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AACE,iBAAO,KAAKP,KAAL,CAAWe,KADpB;AAEE,gBAAM,KAAKf,KAAL,CAAWuB,IAFnB;AAGE,mBAAS,KAAKtB,WAHhB;AAIE,kBAAQ,KAAKE,eAJf;AAKE,eAAK,KAAKH,KAAL,CAAWwB,GALlB;AAME,eAAK,KAAKxB,KAAL,CAAWyB,GANlB;AAOE,gBAAM,KAAKzB,KAAL,CAAW0B,IAPnB;AAQE,mBAAS,KAAK1B,KAAL,CAAW2B,OARtB;AASE,oBAAU,KAAKvB,YATjB;AAUE,qBAAW,KAAKJ,KAAL,CAAW4B,SAVxB;AAWE,eAAI;AAXN,UADF;AAcG,aAAKtB,KAAL,CAAWC,YAAX,IAA2B,KAAKP,KAAL,CAAW6B,OAAtC,IACC;AACE,wBAAc,KAAKxB,YADrB;AAEE,2BAAiB,KAAKL,KAAL,CAAW8B,eAF9B;AAGE,6BAAmB,KAAK9B,KAAL,CAAW+B,iBAHhC;AAIE,qBAAW,KAAKtB,IAAL,CAAUD,KAJvB;AAKE,kCAAwB,KAAKR,KAAL,CAAWgC;AALrC;AAfJ,OADF;AA0BD;;;;EAtE2B,gBAAMC,S;;kBAyErBlC,e","file":"KeyboardedInput.js","sourcesContent":["import React from 'react';\nimport Keyboard from './Keyboard';\nimport KeyboardButton from './KeyboardButton';\n\nclass KeyboardedInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.hideKeyboard = this.hideKeyboard.bind(this);\n\n    this.state = {\n      showKeyboard: false,\n      input: null,\n    };\n  }\n\n  componentDidMount() {\n    this.refs.input.addEventListener('input', this.handleChange);\n  }\n\n  componentWillUnmount() {\n    this.refs.input.removeEventListener('input', this.handleChange);\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  handleFocus() {\n    this.setState({...this.state, showKeyboard: true});\n  }\n\n  handleFocusLost(event) {\n    var that = this;\n    setTimeout(function(){\n       if (!document.activeElement.classList.contains(\"keyboard-button\") && !document.activeElement.classList.contains(\"keyboard\") && !document.activeElement.classList.contains(\"keyboard-row\")) {\n         that.setState({...that.state, showKeyboard: false});\n       }\n    }, 0);\n  }\n\n  hideKeyboard() {\n    this.setState({...this.state, showKeyboard: false});\n  }\n\n  render() {\n    return (\n      <div>\n        <input \n          value={this.props.value}\n          type={this.props.type}\n          onFocus={this.handleFocus}\n          onBlur={this.handleFocusLost}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step}\n          pattern={this.props.pattern}\n          onChange={this.handleChange}\n          autoFocus={this.props.autoFocus}\n          ref=\"input\"\n        />\n        {this.state.showKeyboard && this.props.enabled &&\n          <Keyboard\n            hideKeyboard={this.hideKeyboard}\n            defaultKeyboard={this.props.defaultKeyboard}\n            secondaryKeyboard={this.props.secondaryKeyboard}\n            inputNode={this.refs.input}\n            isFirstLetterUppercase={this.props.capitalize}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default KeyboardedInput;\n"]}