{"version":3,"sources":["../src/KeyboardedInput.js"],"names":["KeyboardedInput","props","handleFocus","bind","handleFocusLost","handleChange","hideKeyboard","state","showKeyboard","input","focusLostTimer","refs","addEventListener","removeEventListener","clearTimeout","prevProps","prevState","onToggle","event","onChange","target","value","setState","setTimeout","document","activeElement","classList","contains","type","min","max","step","pattern","autoFocus","enabled","defaultKeyboard","secondaryKeyboard","capitalize","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACXA,KADW;;AAGjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,OAApB;;AAEA,UAAKI,KAAL,GAAa;AACXC,oBAAc,KADH;AAEXC,aAAO,IAFI;AAGXC,sBAAgB;AAHL,KAAb;AARiB;AAalB;;;;wCAEmB;AAClB,WAAKC,IAAL,CAAUF,KAAV,CAAgBG,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKP,YAA/C;AACD;;;2CAEsB;AACrB,WAAKM,IAAL,CAAUF,KAAV,CAAgBI,mBAAhB,CAAoC,OAApC,EAA6C,KAAKR,YAAlD;AACA,UAAI,KAAKE,KAAL,CAAWG,cAAf,EACEI,aAAa,KAAKP,KAAL,CAAWG,cAAxB;AACH;;;uCAEkBK,S,EAAWC,S,EAAW;AACvC,UAAK,KAAKT,KAAL,CAAWC,YAAX,KAA4BQ,UAAUR,YAAvC,IAAwD,KAAKP,KAAL,CAAWgB,QAAvE,EACE,KAAKhB,KAAL,CAAWgB,QAAX,CAAoB,KAAKV,KAAL,CAAWC,YAA/B;AACH;;;iCAEYU,K,EAAO;AAClB,WAAKjB,KAAL,CAAWkB,QAAX,CAAoBD,MAAME,MAAN,CAAaC,KAAjC;AACD;;;kCAEa;AACZ,WAAKC,QAAL,cAAkB,KAAKf,KAAvB,IAA8BC,cAAc,IAA5C;AACD;;;oCAEeU,K,EAAO;AAAA;;AACrB,WAAKI,QAAL,CAAc;AACZZ,wBAAgBa,WAAW,YAAM;AAChC,cAAI,CAACC,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,iBAA1C,CAAD,IAAiE,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,UAA1C,CAAlE,IAA2H,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,cAA1C,CAAhI,EAA2L;AACzL,mBAAKL,QAAL,cAAkB,OAAKf,KAAvB,IAA8BC,cAAc,KAA5C,EAAmDE,gBAAgB,IAAnE;AACD;AACD,SAJe,EAIb,CAJa;AADJ,OAAd;AAOD;;;mCAEc;AACb,WAAKY,QAAL,cAAkB,KAAKf,KAAvB,IAA8BC,cAAc,KAA5C;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AACE,iBAAO,KAAKP,KAAL,CAAWoB,KADpB;AAEE,gBAAM,KAAKpB,KAAL,CAAW2B,IAFnB;AAGE,mBAAS,KAAK1B,WAHhB;AAIE,kBAAQ,KAAKE,eAJf;AAKE,eAAK,KAAKH,KAAL,CAAW4B,GALlB;AAME,eAAK,KAAK5B,KAAL,CAAW6B,GANlB;AAOE,gBAAM,KAAK7B,KAAL,CAAW8B,IAPnB;AAQE,mBAAS,KAAK9B,KAAL,CAAW+B,OARtB;AASE,oBAAU,KAAK3B,YATjB;AAUE,qBAAW,KAAKJ,KAAL,CAAWgC,SAVxB;AAWE,eAAI;AAXN,UADF;AAcG,aAAK1B,KAAL,CAAWC,YAAX,IAA2B,KAAKP,KAAL,CAAWiC,OAAtC,IACC;AACE,wBAAc,KAAK5B,YADrB;AAEE,2BAAiB,KAAKL,KAAL,CAAWkC,eAF9B;AAGE,6BAAmB,KAAKlC,KAAL,CAAWmC,iBAHhC;AAIE,qBAAW,KAAKzB,IAAL,CAAUF,KAJvB;AAKE,kCAAwB,KAAKR,KAAL,CAAWoC;AALrC;AAfJ,OADF;AA0BD;;;;EAhF2B,gBAAMC,S;;kBAmFrBtC,e","file":"KeyboardedInput.js","sourcesContent":["import React from 'react';\nimport Keyboard from './Keyboard';\nimport KeyboardButton from './KeyboardButton';\n\nclass KeyboardedInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.hideKeyboard = this.hideKeyboard.bind(this);\n\n    this.state = {\n      showKeyboard: false,\n      input: null,\n      focusLostTimer: null\n    };\n  }\n\n  componentDidMount() {\n    this.refs.input.addEventListener('input', this.handleChange);\n  }\n\n  componentWillUnmount() {\n    this.refs.input.removeEventListener('input', this.handleChange);\n    if (this.state.focusLostTimer)\n      clearTimeout(this.state.focusLostTimer);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if ((this.state.showKeyboard !== prevState.showKeyboard) && this.props.onToggle)\n      this.props.onToggle(this.state.showKeyboard);\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  handleFocus() {\n    this.setState({...this.state, showKeyboard: true});\n  }\n\n  handleFocusLost(event) {\n    this.setState({\n      focusLostTimer: setTimeout(() => {\n       if (!document.activeElement.classList.contains(\"keyboard-button\") && !document.activeElement.classList.contains(\"keyboard\") && !document.activeElement.classList.contains(\"keyboard-row\")) {\n         this.setState({...this.state, showKeyboard: false, focusLostTimer: null});\n       }\n      }, 0)\n    });\n  }\n\n  hideKeyboard() {\n    this.setState({...this.state, showKeyboard: false});\n  }\n\n  render() {\n    return (\n      <div>\n        <input \n          value={this.props.value}\n          type={this.props.type}\n          onFocus={this.handleFocus}\n          onBlur={this.handleFocusLost}\n          min={this.props.min}\n          max={this.props.max}\n          step={this.props.step}\n          pattern={this.props.pattern}\n          onChange={this.handleChange}\n          autoFocus={this.props.autoFocus}\n          ref=\"input\"\n        />\n        {this.state.showKeyboard && this.props.enabled &&\n          <Keyboard\n            hideKeyboard={this.hideKeyboard}\n            defaultKeyboard={this.props.defaultKeyboard}\n            secondaryKeyboard={this.props.secondaryKeyboard}\n            inputNode={this.refs.input}\n            isFirstLetterUppercase={this.props.capitalize}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default KeyboardedInput;\n"]}